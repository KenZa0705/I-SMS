-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.admin
(
    admin_id integer NOT NULL DEFAULT nextval('school_staffs_staff_id_seq'::regclass),
    first_name character varying(100) COLLATE pg_catalog."default",
    last_name character varying(100) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    password character varying(100) COLLATE pg_catalog."default",
    contact_number character varying(15) COLLATE pg_catalog."default",
    department_id integer,
    otp character varying(6) COLLATE pg_catalog."default",
    otp_expiry timestamp without time zone,
    CONSTRAINT school_staffs_pkey PRIMARY KEY (admin_id)
);

CREATE TABLE IF NOT EXISTS public.announcement
(
    announcement_id serial NOT NULL,
    title character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    message character varying(255) COLLATE pg_catalog."default",
    department_id integer,
    year_level_id integer,
    admin_id integer,
    image text COLLATE pg_catalog."default",
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT announcement_pkey PRIMARY KEY (announcement_id)
);

CREATE TABLE IF NOT EXISTS public.course
(
    course_id serial NOT NULL,
    course_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT course_pkey PRIMARY KEY (course_id)
);

CREATE TABLE IF NOT EXISTS public.department
(
    department_id serial NOT NULL,
    department_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT department_pkey PRIMARY KEY (department_id)
);

CREATE TABLE IF NOT EXISTS public.student
(
    student_id serial NOT NULL,
    email character varying(100) COLLATE pg_catalog."default",
    password character varying(100) COLLATE pg_catalog."default",
    first_name character varying(100) COLLATE pg_catalog."default",
    last_name character varying(100) COLLATE pg_catalog."default",
    contact_number character varying(15) COLLATE pg_catalog."default",
    year_level_id integer,
    department_id integer,
    course_id integer,
    otp character varying(6) COLLATE pg_catalog."default",
    otp_expiry timestamp without time zone,
    CONSTRAINT student_pkey PRIMARY KEY (student_id)
);

CREATE TABLE IF NOT EXISTS public.year_level
(
    year_level_id serial NOT NULL,
    year_level character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT year_level_pkey PRIMARY KEY (year_level_id)
);

ALTER TABLE IF EXISTS public.admin
    ADD CONSTRAINT school_staffs_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.department (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.announcement
    ADD CONSTRAINT announcement_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.department (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.announcement
    ADD CONSTRAINT announcement_staff_id_fkey FOREIGN KEY (admin_id)
    REFERENCES public.admin (admin_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.announcement
    ADD CONSTRAINT announcement_year_level_id_fkey FOREIGN KEY (year_level_id)
    REFERENCES public.year_level (year_level_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.student
    ADD CONSTRAINT student_course_id_fkey FOREIGN KEY (course_id)
    REFERENCES public.course (course_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.student
    ADD CONSTRAINT student_department_id_fkey FOREIGN KEY (department_id)
    REFERENCES public.department (department_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.student
    ADD CONSTRAINT student_year_level_id_fkey FOREIGN KEY (year_level_id)
    REFERENCES public.year_level (year_level_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;